pipeline {
    agent any
    tools {
        maven 'Maven 3.5.3'
        jdk 'JDK8'
    }
    stages {
        stage ('Initialize') {
            steps {
                sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                '''
            }
        }
 
        stage ('Build') {
            steps {
                sh 'mvn -Dmaven.test.failure.ignore=true clean package' 
            }
            post {
                success {
                    archiveArtifacts artifacts: '**/target/**/*', fingerprint: true
                }
            }
        }        

        //Ask confirmation to deploy to config VM 
        stage('Decide tag on deploy to config') {
            agent none
            when {
                expression {env.BRANCH_NAME == "develop" || env.BRANCH_NAME == "master"}
            }
            steps {
                script {
                env.TAG_ON_DEPLOY_TO_CONFIG = input message: 'User input required',
                    parameters: [choice(name: 'Tag on deploy to config', choices: 'No\nYes', description: 'Choose "Yes" if you want to deploy this build to config VM')]
                }
            }
        }

        //Deploy to config job
        stage('Tag on deploy to config') {
            agent any
            when {
                environment name: 'TAG_ON_DEPLOY_TO_CONFIG', value: 'Yes'
            }
            steps {
                build job:'../AVAL_Tomcat_deploy' , parameters:[string(name: 'BRANCH_NAME', value: "${env.BRANCH_NAME}")]
            }
        }

        //Ask confirmation to deploy to VMSS
        stage('Decide tag on deploy to VMSS') {
            agent none
            when {
                environment name: 'TAG_ON_DEPLOY_TO_CONFIG', value: 'Yes'
            }
            steps {
                script {
                env.TAG_ON_DEPLOY_TO_VMSS = input message: 'User input required',
                    parameters: [choice(name: 'Tag on deploy to VMSS', choices: 'No\nYes', description: 'Choose "Yes" if you want to deploy this build to the scale set')]
                }
            }
        }

        //Deploy to VMSS
        stage('Tag on deploy to VMSS') {
            agent any
            when {
                environment name: 'TAG_ON_DEPLOY_TO_VMSS', value: 'Yes'
            }
            steps {
                withCredentials([
                    usernamePassword(credentialsId: "service_principal", usernameVariable: 'SP_USER', passwordVariable: 'SP_PASS'),
                    string(credentialsId: 'subscriptionID', variable: 'SUBSCRIPTION'),
                    string(credentialsId: 'tenant', variable: 'TENANT'),
                    string(credentialsId: 'AVAL_resourceGroup', variable: 'AVAL_RESOURCE_GROUP'),
                    string(credentialsId: 'AVAL_vmConfigName', variable: 'AVAL_VM_CONFIG_NAME'),
                    string(credentialsId: 'AVAL_vmssName', variable: 'AVAL_VMSS_NAME')
                    ]){
                        sh '''
                            az login --service-principal -u $SP_USER -p $SP_PASS -t $TENANT
                            az account set -s $SUBSCRIPTION
                            sh /opt/jenkinsScripts/deploy_vmss.sh -rg $AVAL_RESOURCE_GROUP -vm $AVAL_VM_CONFIG_NAME -vmss $AVAL_VMSS_NAME
                        '''
                }
            }
        }
    }
}