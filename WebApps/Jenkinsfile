pipeline {
    agent any
    tools {
        maven 'Maven 3.5.3'
        jdk 'JDK8'
    }
    stages {
        stage ('Initialize') {
            steps {
                sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                '''
            }
        }
 
        stage ('Build') {
            steps {
                sh 'mvn -Dmaven.test.failure.ignore=true clean package' 
            }
            post {
                success {
                    archiveArtifacts artifacts: '**/target/**/*', fingerprint: true
                }
            }
        } 
        
        stage('Decide tag on deploy to DEV') {
            agent none
            steps {
                script {
                env.TAG_ON_DEPLOY_TO_DEV = input message: 'User input required',
                    parameters: [choice(name: 'Tag on deploy to DEV', choices: 'No\nYes', description: 'Choose "Yes" if you want to deploy this webapp build to DEV')]
                }
            }
        }

        //Deploy to config job
        stage('Tag on deploy to DEV') {
            agent any
            when {
                environment name: 'TAG_ON_DEPLOY_TO_DEV', value: 'Yes'
            }
            steps {
                withCredentials([
                    string(credentialsId: 'Mycar-rg', variable: 'MYCAR_RG'),
                    string(credentialsId: 'Mycar_appName', variable: 'MYCAR_APPNAME'),
                    azureServicePrincipal('AVAL-Service-principal')
                ]){
                azureWebAppPublish azureCredentialsId: '$CLIENT_ID',
                                   resourceGroup: '$MYCAR_RG', 
                                   appName: '$MYCAR_APPNAME',
                                   filePath: '*.war', sourceDirectory: 'target', 
                                   targetDirectory: 'webapps'
                }
            }
        }
    }
}